knit_with_parameters('~/Documents/project/WhiH_motiff/results/notebook.Rmd')
RMfor <- read.csv("~/Documents/courses/stats/Ex_5/RMfor.csv", sep=';')
pairs(~oak+birch+alder+lime, data=RMfor, main="Simple Scatterplot Matrix")
RMfor$oak.birch.prod <- RMfor$oak * RMfor$birch
RMfor$oak.birch.prod <- RMfor$oak * RMfor$birch
RMfor$oak.alder.prod <- RMfor$oak * RMfor$alder
RMfor$birch.alder.prod <- RMfor$alder * RMfor$birch
View(RMfor)
library(Hmisc)
rcorr(RMfor$oak,RMfor$lime, type="pearson")
rcorr(RMfor$birch,RMfor$lime, type="pearson")
rcorr(RMfor$alder,RMfor$lime, type="pearson")
rcorr(RMfor$oak.birch.prod,RMfor$lime, type="pearson")
rcorr(RMfor$oak.alder.prod,RMfor$lime, type="pearson")
rcorr(RMfor$birch.alder.prod,RMfor$lime, type="pearson")
rcorr(as.matrix(RMfor[4:10], type="pearson")
rcorr(as.matrix(RMfor[4:10]), type="pearson")
rcorr(as.matrix(RMfor[4:10]), type="pearson")
library (pcor)
library (ppcor)
install.packages("ppcor")
library (ppcor)
pcor.test(RMfor$lime, RMfor$oak, RMfor$birch, method="pearson")
pcor.test(RMfor$lime, RMfor$oak, RMfor$alder, method="pearson")
pcor.test(RMfor$lime, RMfor$alder, RMfor$birch, method="pearson")
p.values <- rep(NA, 10)
dim(p.values) <- c(5,2)
p.values
oak_alder <- pcor.test(RMfor$lime, RMfor$oak, RMfor$alder, method="pearson")
lim_oak <-  pcor.test(RMfor$lime, RMfor$oak, RMfor$alder, method="pearson")
p.values[1,1] <- "lim_oak"
lim_oak <-  pcor.test(RMfor$lime, RMfor$oak, RMfor$birch, method="pearson")
p.values[1,1] <- "lim_oak"
p.values[1,2] <- lim_oak$p.value
lim_ald <-  pcor.test(RMfor$lime, RMfor$alder, RMfor$birch, method="pearson")
p.values[2,1] <- "lim_ald"
p.values[2,2] <- lim_ald$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor$birch, method="pearson")
p.values[3,1] <- "lim_oxb"
p.values[3,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor$birch, method="pearson")
p.values[4,1] <- "lim_oxa"
p.values[4,2] <- lim_oxa$p.value
lim_axb <-  pcor.test(RMfor$lime, RMfor$birch.alder.prod, RMfor$birch, method="pearson")
p.values[5,1] <- "lim_axb"
p.values[5,2] <- lim_axb$p.value
p.values
p.values <- rep(NA, 8)
dim(p.values) <- c(4, 2)
p.values <- rep(NA, 8)
dim(p.values) <- c(4, 2)
lim_ald <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:5], method="pearson")
p.values[1,1] <- "lim_ald"
p.values[1,2] <- lim_ald$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:5], method="pearson")
p.values[2,1] <- "lim_oxb"
p.values[2,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor[4:5], method="pearson")
p.values[3,1] <- "lim_oxa"
p.values[3,2] <- lim_oxa$p.value
lim_axb <-  pcor.test(RMfor$lime, RMfor$birch.alder.prod, RMfor[4:5], method="pearson")
p.values[4,1] <- "lim_axb"
p.values[4,2] <- lim_axb$p.value
p.values
p.values <- rep(NA, 6)
dim(p.values) <- c(3, 2)
lim_axb <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:6], method="pearson")
p.values[1,1] <- "lim_ald"
p.values[1,2] <- lim_axb$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:6], method="pearson")
p.values[2,1] <- "lim_oxb"
p.values[2,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor[4:6], method="pearson")
p.values[3,1] <- "lim_oxa"
p.values[3,2] <- lim_oxa$p.value
p.values
lim_axb <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:6], method="pearson")
p.values[1,1] <- "lim_axb"
p.values[1,2] <- lim_axb$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:6], method="pearson")
p.values[2,1] <- "lim_oxb"
p.values[2,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor[4:6], method="pearson")
p.values[3,1] <- "lim_oxa"
p.values[3,2] <- lim_oxa$p.value
p.values
p.values <- rep(NA, 4)
dim(p.values) <- c(2, 2)
lim_oxa <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:6], method="pearson")
p.values[1,1] <- "lim_oxa"
p.values[1,2] <- lim_oxa$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:6], method="pearson")
p.values[2,1] <- "lim_oxb"
p.values[2,2] <- lim_oxb$p.value
p.values
p.values <- rep(NA, 10)
dim(p.values) <- c(5,2)
lim_oak <-  pcor.test(RMfor$lime, RMfor$oak, RMfor$birch, method="pearson")
p.values[1,1] <- "lim_oak"
p.values[1,2] <- lim_oak$p.value
lim_ald <-  pcor.test(RMfor$lime, RMfor$alder, RMfor$birch, method="pearson")
p.values[2,1] <- "lim_ald"
p.values[2,2] <- lim_ald$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor$birch, method="pearson")
p.values[3,1] <- "lim_oxb"
p.values[3,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor$birch, method="pearson")
p.values[4,1] <- "lim_oxa"
p.values[4,2] <- lim_oxa$p.value
lim_axb <-  pcor.test(RMfor$lime, RMfor$birch.alder.prod, RMfor$birch, method="pearson")
p.values[5,1] <- "lim_axb"
p.values[5,2] <- lim_axb$p.value
p.values
# oak has most significance so we control it in next step
#5 new partial correlation matrix with controlling both birch and oak
p.values2 <- rep(NA, 8)
dim(p.values2) <- c(4, 2)
lim_ald <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:5], method="pearson")
p.values2[1,1] <- "lim_ald"
p.values2[1,2] <- lim_ald$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:5], method="pearson")
p.values2[2,1] <- "lim_oxb"
p.values2[2,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor[4:5], method="pearson")
p.values2[3,1] <- "lim_oxa"
p.values2[3,2] <- lim_oxa$p.value
lim_axb <-  pcor.test(RMfor$lime, RMfor$birch.alder.prod, RMfor[4:5], method="pearson")
p.values2[4,1] <- "lim_axb"
p.values2[4,2] <- lim_axb$p.value
p.values2
#exclude ald now
p.values3 <- rep(NA, 6)
dim(p.values3) <- c(3, 2)
lim_axb <-  pcor.test(RMfor$lime, RMfor$alder, RMfor[4:6], method="pearson")
p.values3[1,1] <- "lim_axb"
p.values3[1,2] <- lim_axb$p.value
lim_oxb <-  pcor.test(RMfor$lime, RMfor$oak.birch.prod, RMfor[4:6], method="pearson")
p.values3[2,1] <- "lim_oxb"
p.values3[2,2] <- lim_oxb$p.value
lim_oxa <-  pcor.test(RMfor$lime, RMfor$oak.alder.prod, RMfor[4:6], method="pearson")
p.values3[3,1] <- "lim_oxa"
p.values3[3,2] <- lim_oxa$p.value
p.values3
full.model <- lm(lime~oak+birch+alder+oak*birch+oak*alder+birch*alder, data=RMfor)
summary(full.model)
install.packages("glmulti")
model.sel <- glmulti(full.model, level = 2, crit='aic')
library(glmulti)
install.packages("glmulti")
library(glmulti)
model.sel <- glmulti(full.model, level = 2, crit='aic')
install.packages(glmulti)
install.packages("glmulti")
library(glmulti)
model.sel <- glmulti(full.model, level = 2, crit='aic')
1076 - 207
756 - 54
fimo <- read.csv('~/2016-11-18/all_peaks/fimo.txt', sep='\t')
fimo <- read.csv('2016-11-18/all_peaks/fimo.txt', sep='\t')
View(fimo)
plot(fimo$score)
plot(log(fimo$score))
plot(fimo$score, line=TRUE)
plot(fimo$score, both=TRUE)
plot(fimo$score, type = 'l')
plot(fimo$p.value, type = 'l')
plot(log(fimo$p.value), type = 'l')
plot(-log(fimo$p.value), type = 'l')
ylab = "-log of p-value", xval = "# of matches")
plot(-log(fimo$p.value), type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xval = "# of matches")
plot(-log(fimo$p.value), type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "# of matches")
mcast <- read.csv('2016-11-18/all_peaks/mcast.txt', sep='\t')
View(mcast)
match(fimo$start,mcast$start)
na.omit(match(fimo$start,mcast$start))
fimo$mcast <- match(fimo$start,mcast$start)
points(fimo$mcast, col='red')
fimo$logs <- -log(fimo$p.value)
fimo <- read.csv('2016-11-18/all_peaks/fimo.txt', sep='\t')
fimo$logs <- -log(fimo$p.value)
mcast <- read.csv('2016-11-18/all_peaks/mcast.txt', sep='\t')
fimo$mcast <- match(fimo$start,mcast$start)
fimo$mcast[-NA] <- fimo$logs[fimo$mcast[-NA]]
View(mcast)
View(fimo)
fimo$mcast[-NA] <- fimo$logs[fimo$mcast[-NA]]
fimo$mcast[-NA] <- fimo$logs[fimo$mcast != NA]
fimo$mcast[fimo$mcast != NA] <- fimo$logs[fimo$mcast != NA]
fimo$mcast[na.omit(fimo$mcast)] <- fimo$logs[na.omit(fimo$mcast)]
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "# of matches")
points(fimo$mcast, col='red')
na.omit(fimo$mcast)
fimo$mcast <- match(fimo$start,mcast$start)
is.na(fimo$mcast)
!is.na(fimo$mcast)
fimo$mcast <- match(fimo$start,mcast$start)
fimo$mcast[!is.na(fimo$mcast)] <- fimo$logs[!is.na(fimo$mcast)]
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "# of matches")
points(fimo$mcast, col='red')
# all peak analysis
fimo <- read.csv('2016-11-18/all_peaks/fimo.txt', sep='\t')
#View(fimo)
fimo$logs <- -log(fimo$p.value)
# add matches from MCAST
mcast <- read.csv('2016-11-18/all_peaks/mcast.txt', sep='\t')
#View(mcast)
fimo$mcast <- match(fimo$start,mcast$start)
fimo$mcast[!is.na(fimo$mcast)] <- fimo$logs[!is.na(fimo$mcast)]
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "# of matches")
points(fimo$mcast, col='red')
centrimo <- read.csv('2016-11-18/all_peaks/centrimo.txt')
View(centrimo)
View(fimo)
fimo$centrimo_full_match <- c()
fimo$centrimo_full_match <- c()
# all peak analysis
fimo <- read.csv('2016-11-18/all_peaks/fimo.txt', sep='\t')
#View(fimo)
fimo$logs <- -log(fimo$p.value)
# add matches from MCAST
mcast <- read.csv('2016-11-18/all_peaks/mcast.txt', sep='\t')
#View(mcast)
fimo$mcast <- match(fimo$start,mcast$start)
fimo$mcast[!is.na(fimo$mcast)] <- fimo$logs[!is.na(fimo$mcast)]
# add matches from Centrimo
centrimo <- read.csv('2016-11-18/all_peaks/centrimo.txt')
fimo$centrimo_full_match <- c(NA)
fimo$centrimo_full_match <- c(NA)
for (count1 in 1:length(centrimo)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo[count1] >= fimo$start[count2] && centrimo[count1] <= fimo$stop[cont2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
}
}
}
fimo$centrimo_full_match <- c(NA)
for (count1 in 1:length(centrimo)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo[count1] >= fimo$start[count2] && centrimo[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
}
}
}
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index of match")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
source('~/Documents/project/WhiH_motiff/results/2016-11-18/res_interpret.R')
fimo$centrimo_full_match <- c(NA)
debugSource('~/Documents/project/WhiH_motiff/results/2016-11-18/res_interpret.R')
centrimo[count1]
centrimo[[count1]]
centrimo$Centrimo_Reg_Matches[count1]
fimo$centrimo_full_match <- c(NA)
for (count1 in 1:length(centrimo)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= fimo$start[count2] && centrimo$Centrimo_Reg_Matches[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
}
}
}
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index of match")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
debugSource('~/Documents/project/WhiH_motiff/results/2016-11-18/res_interpret.R')
length(centrimo$Centrimo_Reg_Matches)
fimo$centrimo_full_match <- c(NA)
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= fimo$start[count2] && centrimo$Centrimo_Reg_Matches[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
}
}
}
#plot all results
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index of match")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(locator(1))
legend(locator(1),legend = c('fimo','mcast','centrimo'))
legend(locator(1),legend = c('fimo','mcast','centrimo'))
legend(x='topright',legend = c('fimo','mcast','centrimo'))
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index of match")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('fimo','mcast','centrimo'))
fimo$centrimo_full_match <- c(NA)
totMathes <- 0
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= fimo$start[count2] && centrimo$Centrimo_Reg_Matches[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
totMathes = topright + 1
break;
}
}
}
cat(totMatches, "out of", length(centrimo$Centrimo_Reg_Matches))
fimo$centrimo_full_match <- c(NA)
totMathes <- 0
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= fimo$start[count2] && centrimo$Centrimo_Reg_Matches[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
totMathes = topright + 1
break;
}
}
}
cat(totMathes, "out of", length(centrimo$Centrimo_Reg_Matches))
fimo$centrimo_full_match <- c(NA)
totMathes <- 0
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= fimo$start[count2] && centrimo$Centrimo_Reg_Matches[count1] <= fimo$stop[count2]){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
totMathes = totMathes + 1
break;
}
}
}
cat(totMathes, "out of", length(centrimo$Centrimo_Reg_Matches))
fimo$centrimo_full_match <- c(NA)
totMathes <- 0
rangeExtantion <- 100
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= (fimo$start[count2] - rangeExtantion)
&& centrimo$Centrimo_Reg_Matches[count1] <= (fimo$stop[count2] + rangeExtantion)){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
totMathes = totMathes + 1
break;
}
}
}
cat(totMathes, "out of", length(centrimo$Centrimo_Reg_Matches))
#plot all results
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index in FIMO")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'))
debugSource('~/Documents/project/WhiH_motiff/results/2016-11-18/res_interpret.R', echo=TRUE)
fimo$centrimo_full_match <- c(NA)
totMathes <- 0
rangeExtantion <- 200
for (count1 in 1:length(centrimo$Centrimo_Reg_Matches)) {
for (count2 in 1:length(fimo$logs)) {
if (centrimo$Centrimo_Reg_Matches[count1] >= (fimo$start[count2] - rangeExtantion)
&& centrimo$Centrimo_Reg_Matches[count1] <= (fimo$stop[count2] + rangeExtantion)){
fimo$centrimo_full_match[count2] = fimo$logs[count2]
totMathes = totMathes + 1
break;
}
}
}
cat(totMathes, "CentriMo matches out of", length(centrimo$Centrimo_Reg_Matches))
#plot all results
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index in FIMO")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'))
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'), lty=c(1,2,3), col=c('black','red','blue'))
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'), lty=c(1),pch = c(1,3), col=c('black','red','blue'))
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index in FIMO")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'), lty=c(1),pch = c(1,3), col=c('black','red','blue'))
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index in FIMO")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'), lty=c(1,0,0),pch = c(0,1,3), col=c('black','red','blue'))
plot(fimo$logs, type = 'l', main="-log of p-value vs. index",
ylab = "-log of p-value", xlab = "index in FIMO")
points(fimo$mcast, col='red')
points(fimo$centrimo_full_match, col='blue',pch=3)
legend(x='topright',legend = c('FIMO','MCAST','CentriMo'), lty=c(1,0,0),pch = c(NA,1,3), col=c('black','red','blue'))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
